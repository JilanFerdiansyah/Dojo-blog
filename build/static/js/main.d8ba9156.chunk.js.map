{"version":3,"sources":["Components/Navbar.js","Components/BlogLists.js","Components/useFetch.js","Components/Home.js","Components/Create.js","Components/BlogDetails.js","Components/page404.js","App.js","index.js"],"names":["Navbar","className","to","BlogLists","blogs","title","map","blog","id","author","useFetch","url","useState","data","setData","isLoading","setIsLoading","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","event","preventDefault","blogData","method","headers","JSON","stringify","push","htmlFor","type","required","value","onChange","target","cols","rows","disabled","BlogDetails","useParams","onClick","Page404","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8ba9156.chunk.js","sourcesContent":["import {Link} from 'react-router-dom';\nconst Navbar = () => {\n    return ( \n        <nav className=\"navbar\">\n            <h1>React Blog</h1>\n            <div className=\"links\">\n                <Link to=\"/\">Home</Link>\n                <Link to=\"/Create\">New Blog</Link>\n            </div>\n        </nav>\n     );\n}\n \nexport default Navbar;","import { Link } from \"react-router-dom\";\n\nconst BlogLists = ({ blogs, title }) => {\n  //   const blogs = props.blogs;\n  //   const title = props.title;\n\n  return (\n    <div className=\"blogs\">\n      <h2>{title}</h2>\n      {blogs.map((blog) => (\n        <div className=\"blog-preview\" key={blog.id}>\n          <Link to={`/Blogs/${blog.id}`}>\n            <h2>{blog.title}</h2>\n            <p>Written by {blog.author}</p>\n          </Link>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default BlogLists;\n","import { useState, useEffect } from \"react\";\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, { signal: abortCont.signal })\n        .then((res) => {\n          if (!res.ok) {\n            throw Error(\"could not fetch data\");\n          }\n          return res.json();\n        })\n        .then((data) => {\n          setData(data);\n          setIsLoading(false);\n          setError(null);\n        })\n        .catch((err) => {\n          if (err.name === \"AbortError\") {\n            console.log(\"fetch aborted\");\n          } else {\n            // auto catches network / connection error\n            setIsLoading(false);\n            setError(err.message);\n          }\n        });\n    }, 250);\n\n    return () => abortCont.abort();\n  }, [url]);\n\n  return { data, isLoading, error };\n};\n\nexport default useFetch;\n","// import React, { useState, useEffect } from \"react\";\nimport BlogLists from \"./BlogLists\";\nimport useFetch from \"./useFetch\";\n\nconst Home = () => {\nconst {data: blogs, isLoading, error} = useFetch('http://localhost:8000/blogs');\n  return (\n\n    <div className=\"home\">\n      {error && <div>{error}</div>}\n      {isLoading && <div>Loading....</div>}\n      {blogs && <BlogLists blogs={blogs} title=\"all blogs\"></BlogLists>}\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport {useHistory} from \"react-router-dom\";\nconst Create = () => {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [author, setAuthor] = useState(\"Naruto\");\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n\n  const titleHandler = (event) => {\n    setTitle(event.target.value);\n  };\n  const bodyHandler = (event) => {\n    setBody(event.target.value);\n\n  };\n  const authorHandler = (event) => {\n    setAuthor(event.target.value);\n   \n  };\n\n  const submitHandler = (event) => {\n      event.preventDefault();\n      const blogData ={ title, body, author};\n\n      setIsLoading(true);\n\n      fetch('http://localhost:8000/blogs', {\n          method: 'POST',\n          headers: {\"Content-Type\": \"application/json\"},\n          body: JSON.stringify(blogData),\n      }).then(() => {\n          console.log('New blog added');\n          setIsLoading(false);\n        //   history.go(-1);\n        history.push('/');\n      })\n  }\n\n\n  return (\n    <div className=\"create\">\n      <h2>Add new blog</h2>\n      <form onSubmit={submitHandler}>\n        <label htmlFor=\"\">Blog Title : </label>\n        <input type=\"text\" required value={title} onChange={titleHandler} />\n        <label htmlFor=\"\">Blog Body : </label>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"30\"\n          rows=\"10\"\n          required\n          value={body}\n          onChange={bodyHandler}\n        ></textarea>\n        <label htmlFor=\"\">Blog Author :</label>\n        <select name=\"\" id=\"\" value={author} onChange={authorHandler}>\n          <option value=\"Naruto\">Naruto</option>\n          <option value=\"Sasuke\">Sasuke</option>\n        </select>\n        {! isLoading && <button>Add Blog</button>}\n        { isLoading && <button disabled>Add Blog</button>}\n      </form>\n    </div>\n  );\n};\n\nexport default Create;\n","import { useHistory, useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\n\n\nconst BlogDetails = () => {\n  const { id } = useParams();\n  const history = useHistory();\n  const {\n    data: blog,\n    isLoading,\n    error,\n  } = useFetch(\"http://localhost:8000/blogs/\" + id);\n\n  const deleteHandler = () => {\n    fetch('http://localhost:8000/blogs/' + blog.id, {\n          method: 'DELETE',\n          \n      }).then(() => {\n          console.log('New blog added');\n\n        //   history.go(-1);\n        history.push('/');\n      })\n  }\n  return (\n    <div className=\"blog-details\">\n      {error && <div>{error}</div>}\n      {isLoading && <div>Loading....</div>}\n      {blog && (\n        <article>\n          <h2>{blog.title}</h2>\n          <p>Written by {blog.author}</p>\n          <div>{blog.body}</div>\n          <button onClick={deleteHandler}>Delete blog</button>\n        </article>\n      )}\n    </div>\n  );\n};\n\nexport default BlogDetails;\n","import { Link } from \"react-router-dom\"\n\nconst Page404 = () => {\n    return ( \n        <div className=\"not-found\">\n            <h1>404 NO DATA</h1>\n            <p>data nya ga ada :(</p>\n            <Link to=\"/\">Back to Home</Link>\n        </div>\n     );\n}\n \nexport default Page404;","import Navbar from \"./Components/Navbar\";\nimport Home from \"./Components/Home\";\nimport Create from \"./Components/Create\";\nimport BlogDetails from \"./Components/BlogDetails\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Page404 from \"./Components/page404\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar></Navbar>\n        <div className=\"content\">\n         <Switch>\n           <Route exact path=\"/\">\n             <Home></Home>\n           </Route>\n           <Route path=\"/Create\">\n             <Create></Create>\n           </Route>\n           <Route path=\"/Blogs/:id\">\n             <BlogDetails></BlogDetails>\n           </Route>\n           <Route path=\"/*\">\n             <Page404></Page404>\n           </Route>\n         </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}